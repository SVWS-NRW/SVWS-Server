configurations {
	implementation.extendsFrom(crypto, database, jackson, jetty, resteasy, swagger, pdf)
}

compileJava.dependsOn(":svws-db:assemble")
compileJava.dependsOn(":svws-db-utils:assemble")
compileJava.dependsOn(":svws-module-reporting:assemble")
compileJava.dependsOn(":svws-module-dav-api:assemble")

/* TODO Support JPMS-Modules
extraJavaModuleInfo {
    automaticModule("apache-mime4j-core-0.8.3.jar", "org.apache.james.mime4j")
    automaticModule("apache-mime4j-dom-0.8.3.jar", "org.apache.james.mime4j.dom")
    automaticModule("apache-mime4j-storage-0.8.3.jar", "org.apache.james.mime4j.storage")
    automaticModule("asyncutil-0.1.0.jar", "com.ibm.asyncutil")
    automaticModule("btf-1.3.jar", "com.github.fge")
    automaticModule("commons-io-2.5.jar", "org.apache.commons.io")
    automaticModule("commons-logging-1.2.jar", "org.apache.commons.logging")
    automaticModule("jackson-coreutils-2.0.jar", "com.github.fge.jackson")
    automaticModule("javassist-3.22.0-GA.jar", "javaassist")
    automaticModule("json-patch-1.13.jar", "com.github.fge.jsonpatch")
    automaticModule("microprofile-config-api-1.4.jar", "org.eclipse.microprofile.config")
    automaticModule("msg-simple-1.2.jar", "com.github.fge.msgsimple")
    automaticModule("resteasy-core-4.5.8.Final.jar", "org.jboss.resteasy.core")
    automaticModule("resteasy-core-spi-4.5.8.Final.jar", "org.jboss.resteasy.spi")
    automaticModule("resteasy-client-4.5.8.Final.jar", "org.jboss.resteasy.client")
	automaticModule("resteasy-client-api-4.5.8.Final.jar", "org.jboss.resteasy.client.api")
    automaticModule("resteasy-jackson2-provider-4.5.8.Final.jar", "org.jboss.resteasy.providers.jackson")
    automaticModule("resteasy-jaxb-provider-4.5.8.Final.jar", "org.jboss.resteasy.providers.jaxb")
    automaticModule("resteasy-multipart-provider-4.5.8.Final.jar", "org.jboss.resteasy.providers.multipart")
    automaticModule("slf4j-api-1.7.25.jar", "org.slf4j")
    automaticModule("smallrye-config-1.6.1.jar", "io.smallrye.config")
    automaticModule("smallrye-config-common-1.6.1.jar", "io.smallrye.config.common")
    automaticModule("swagger-ui-dist-3.35.0.jar", "io.swagger.ui.dist")
}
*/

dependencies {
	implementation project(':svws-core')
	implementation project(':svws-db')
	implementation project(':svws-db-dto')
	implementation project(':svws-db-utils')
	implementation project(':svws-module-reporting')
    implementation project(':svws-module-dav-api')
}
// TODO xml-apis belegt namespaces org.w3c.dom und javax.xml.namespace
// dies führt zu eclipse problemen (package accesible from more than one module),
// allerdings nicht zu problemen im gradle build.
// mit Herrn bachran absprechen, ob das so iO ist.
configurations.implementation {
  exclude group: 'xml-apis'
}

task createVersionProperties() {
	inputs.files "$rootDir/buildconfig.json"
    outputs.files "$projectDir/src/main/resources/config/version.properties"
    doLast {
        file("src/main/resources/config/version.properties").text = "svws.version=" + project.version.toString() + "\n"
    }
}

processResources.dependsOn createVersionProperties
sourcesJar.dependsOn createVersionProperties

apply from: "$rootDir/publish-helper.gradle"
publishing {
  publications {
    publishJava(MavenPublication) {
    artifactId = 'svws-openapi'
      pom {
        name = 'SVWS OpenApi Library'
        description = 'Diese Bibliothek enthält die Java-Server-Definition der OpenApi-Schnittstelle für die Schulverwaltungssoftware in NRW'
      }
    }
  }
}

