//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1.4-10/27/2009 06:09 PM(mockbuild)-fcs
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2009.12.23 at 06:27:19 PM PST
//


package de.svws_nrw.davapi.model.dav;

import jakarta.xml.bind.JAXBElement;
import jakarta.xml.bind.annotation.XmlElementDecl;
import jakarta.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;
import java.math.BigInteger;


/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the com.github.sardine.model package.
 * <p>An ObjectFactory allows you to programatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and model
 * groups.  Factory methods for each of these are
 * provided in this class.
 */
@SuppressWarnings("unused")
@XmlRegistry
public class ObjectFactory {

	private static final QName _Timeout_QNAME = new QName("DAV:", "timeout");
	private static final QName _SyncLevel_QNAME = new QName("DAV:", "sync-level");
	private static final QName _Status_QNAME = new QName("DAV:", "status");
	private static final QName _Responsedescription_QNAME = new QName("DAV:", "responsedescription");
	private static final QName _Href_QNAME = new QName("DAV:", "href");
	private static final QName _SyncToken_QNAME = new QName("DAV:", "sync-token");
	private static final QName _Dst_QNAME = new QName("DAV:", "dst");
	private static final QName _Nresults_QNAME = new QName("DAV:", "nresults");
	private static final QName _Src_QNAME = new QName("DAV:", "src");
	private static final QName _Depth_QNAME = new QName("DAV:", "depth");

	/**
	 * Leerer Standardkonstruktor.
	 */
	public ObjectFactory() {
		// leer
	}


	/**
	 * Erzeugt ein neues {@link Propfind}-Objekt.
	 *
	 * @return ein neues {@link Propfind}-Objekt.
	 */
	public Propfind createPropfind() {
		return new Propfind();
	}

	/**
	 * Erzeugt ein neues {@link Keepalive}-Objekt.
	 *
	 * @return ein neues {@link Keepalive}-Objekt.
	 */
	public Keepalive createKeepalive() {
		return new Keepalive();
	}

	/**
	 * Erzeugt ein neues {@link Supportedlock}-Objekt.
	 *
	 * @return ein neues {@link Supportedlock}-Objekt.
	 */
	public Supportedlock createSupportedlock() {
		return new Supportedlock();
	}

	/**
	 * Erzeugt ein neues {@link Propertyupdate}-Objekt.
	 *
	 * @return ein neues {@link Propertyupdate}-Objekt.
	 */
	public Propertyupdate createPropertyupdate() {
		return new Propertyupdate();
	}

	/**
	 * Erzeugt ein neues {@link Lockinfo}-Objekt.
	 *
	 * @return ein neues {@link Lockinfo}-Objekt.
	 */
	public Lockinfo createLockinfo() {
		return new Lockinfo();
	}

	/**
	 * Erzeugt ein neues {@link Getlastmodified}-Objekt.
	 *
	 * @return ein neues {@link Getlastmodified}-Objekt.
	 */
	public Getlastmodified createGetlastmodified() {
		return new Getlastmodified();
	}

	/**
	 * Erzeugt ein neues {@link Exclusive}-Objekt.
	 *
	 * @return ein neues {@link Exclusive}-Objekt.
	 */
	public Exclusive createExclusive() {
		return new Exclusive();
	}

	/**
	 * Erzeugt ein neues {@link Getcontentlanguage}-Objekt.
	 *
	 * @return ein neues {@link Getcontentlanguage}-Objekt.
	 */
	public Getcontentlanguage createGetcontentlanguage() {
		return new Getcontentlanguage();
	}

	/**
	 * Erzeugt ein neues {@link Locktoken}-Objekt.
	 *
	 * @return ein neues {@link Locktoken}-Objekt.
	 */
	public Locktoken createLocktoken() {
		return new Locktoken();
	}

	/**
	 * Erzeugt ein neues {@link Propertybehavior}-Objekt.
	 *
	 * @return ein neues {@link Propertybehavior}-Objekt.
	 */
	public Propertybehavior createPropertybehavior() {
		return new Propertybehavior();
	}

	/**
	 * Erzeugt ein neues {@link Propstat}-Objekt.
	 *
	 * @return ein neues {@link Propstat}-Objekt.
	 */
	public Propstat createPropstat() {
		return new Propstat();
	}

	/**
	 * Erzeugt ein neues {@link Multistatus}-Objekt.
	 *
	 * @return ein neues {@link Multistatus}-Objekt.
	 */
	public Multistatus createMultistatus() {
		return new Multistatus();
	}

	/**
	 * Erzeugt ein neues {@link Prop}-Objekt.
	 *
	 * @return ein neues {@link Prop}-Objekt.
	 */
	public Prop createProp() {
		return new Prop();
	}

	/**
	 * Erzeugt ein neues {@link Remove}-Objekt.
	 *
	 * @return ein neues {@link Remove}-Objekt.
	 */
	public Remove createRemove() {
		return new Remove();
	}

	/**
	 * Erzeugt ein neues {@link Response}-Objekt.
	 *
	 * @return ein neues {@link Response}-Objekt.
	 */
	public Response createResponse() {
		return new Response();
	}

	/**
	 * Erzeugt ein neues {@link Location}-Objekt.
	 *
	 * @return ein neues {@link Location}-Objekt.
	 */
	public Location createLocation() {
		return new Location();
	}

	/**
	 * Erzeugt ein neues {@link Omit}-Objekt.
	 *
	 * @return ein neues {@link Omit}-Objekt.
	 */
	public Omit createOmit() {
		return new Omit();
	}

	/**
	 * Erzeugt ein neues {@link Shared}-Objekt.
	 *
	 * @return ein neues {@link Shared}-Objekt.
	 */
	public Shared createShared() {
		return new Shared();
	}

	/**
	 * Erzeugt ein neues {@link Lockentry}-Objekt.
	 *
	 * @return ein neues {@link Lockentry}-Objekt.
	 */
	public Lockentry createLockentry() {
		return new Lockentry();
	}

	/**
	 * Erzeugt ein neues {@link Collection}-Objekt.
	 *
	 * @return ein neues {@link Collection}-Objekt.
	 */
	public Collection createCollection() {
		return new Collection();
	}

	/**
	 * Erzeugt ein neues {@link Locktype}-Objekt.
	 *
	 * @return ein neues {@link Locktype}-Objekt.
	 */
	public Locktype createLocktype() {
		return new Locktype();
	}

	/**
	 * Erzeugt ein neues {@link Error}-Objekt.
	 *
	 * @return ein neues {@link Error}-Objekt.
	 */
	public Error createError() {
		return new Error();
	}

	/**
	 * Erzeugt ein neues {@link Getetag}-Objekt.
	 *
	 * @return ein neues {@link Getetag}-Objekt.
	 */
	public Getetag createGetetag() {
		return new Getetag();
	}

	/**
	 * Erzeugt ein neues {@link Displayname}-Objekt.
	 *
	 * @return ein neues {@link Displayname}-Objekt.
	 */
	public Displayname createDisplayname() {
		return new Displayname();
	}

	/**
	 * Erzeugt ein neues {@link Getcontenttype}-Objekt.
	 *
	 * @return ein neues {@link Getcontenttype}-Objekt.
	 */
	public Getcontenttype createGetcontenttype() {
		return new Getcontenttype();
	}

	/**
	 * Erzeugt ein neues {@link SupportedReportSet}-Objekt.
	 *
	 * @return ein neues {@link SupportedReportSet}-Objekt.
	 */
	public SupportedReportSet createSupportedReportSet() {
		return new SupportedReportSet();
	}

	/**
	 * Erzeugt ein neues {@link SupportedReport}-Objekt.
	 *
	 * @return ein neues {@link SupportedReport}-Objekt.
	 */
	public SupportedReport createSupportedReport() {
		return new SupportedReport();
	}

	/**
	 * Erzeugt ein neues {@link Report}-Objekt.
	 *
	 * @return ein neues {@link Report}-Objekt.
	 */
	public Report createReport() {
		return new Report();
	}

	/**
	 * Erzeugt ein neues {@link SyncCollection}-Objekt.
	 *
	 * @return ein neues {@link SyncCollection}-Objekt.
	 */
	public SyncCollection createSyncCollection() {
		return new SyncCollection();
	}

	/**
	 * Erzeugt ein neues {@link Limit}-Objekt.
	 *
	 * @return ein neues {@link Limit}-Objekt.
	 */
	public Limit createLimit() {
		return new Limit();
	}

	/**
	 * Erzeugt ein neues {@link Allprop}-Objekt.
	 *
	 * @return ein neues {@link Allprop}-Objekt.
	 */
	public Allprop createAllprop() {
		return new Allprop();
	}

	/**
	 * Erzeugt ein neues {@link Link}-Objekt.
	 *
	 * @return ein neues {@link Link}-Objekt.
	 */
	public Link createLink() {
		return new Link();
	}

	/**
	 * Erzeugt ein neues {@link Owner}-Objekt.
	 *
	 * @return ein neues {@link Owner}-Objekt.
	 */
	public Owner createOwner() {
		return new Owner();
	}

	/**
	 * Erzeugt ein neues {@link Lockscope}-Objekt.
	 *
	 * @return ein neues {@link Lockscope}-Objekt.
	 */
	public Lockscope createLockscope() {
		return new Lockscope();
	}

	/**
	 * Erzeugt ein neues {@link Set}-Objekt.
	 *
	 * @return ein neues {@link Set}-Objekt.
	 */
	public Set createSet() {
		return new Set();
	}

	/**
	 * Erzeugt ein neues {@link Lockdiscovery}-Objekt.
	 *
	 * @return ein neues {@link Lockdiscovery}-Objekt.
	 */
	public Lockdiscovery createLockdiscovery() {
		return new Lockdiscovery();
	}

	/**
	 * Erzeugt ein neues {@link Write}-Objekt.
	 *
	 * @return ein neues {@link Write}-Objekt.
	 */
	public Write createWrite() {
		return new Write();
	}

	/**
	 * Erzeugt ein neues {@link WriteContent}-Objekt.
	 *
	 * @return ein neues {@link WriteContent}-Objekt.
	 */
	public WriteContent createWriteContent() {
		return new WriteContent();
	}

	/**
	 * Erzeugt ein neues {@link WriteProperties}-Objekt.
	 *
	 * @return ein neues {@link WriteProperties}-Objekt.
	 */
	public WriteProperties createWriteProperties() {
		return new WriteProperties();
	}

	/**
	 * Erzeugt ein neues {@link Read}-Objekt.
	 *
	 * @return ein neues {@link Read}-Objekt.
	 */
	public Read createRead() {
		return new Read();
	}

	/**
	 * Erzeugt ein neues {@link ReadAcl}-Objekt.
	 *
	 * @return ein neues {@link ReadAcl}-Objekt.
	 */
	public ReadAcl createReadAcl() {
		return new ReadAcl();
	}

	/**
	 * Erzeugt ein neues {@link ReadCurrentUserPrivilegeSet}-Objekt.
	 *
	 * @return ein neues {@link ReadCurrentUserPrivilegeSet}-Objekt.
	 */
	public ReadCurrentUserPrivilegeSet createReadCurrentUserPrivilegeSet() {
		return new ReadCurrentUserPrivilegeSet();
	}

	/**
	 * Erzeugt ein neues {@link UnBind}-Objekt.
	 *
	 * @return ein neues {@link UnBind}-Objekt.
	 */
	public UnBind createUnbind() {
		return new UnBind();
	}

	/**
	 * Erzeugt ein neues {@link Unlock}-Objekt.
	 *
	 * @return ein neues {@link Unlock}-Objekt.
	 */
	public Unlock createUnlock() {
		return new Unlock();
	}

	/**
	 * Erzeugt ein neues {@link All}-Objekt.
	 *
	 * @return ein neues {@link All}-Objekt.
	 */
	public All createAll() {
		return new All();
	}

	/**
	 * Erzeugt ein neues {@link Unauthenticated}-Objekt.
	 *
	 * @return ein neues {@link Unauthenticated}-Objekt.
	 */
	public Unauthenticated createUnauthenticated() {
		return new Unauthenticated();
	}

	/**
	 * Erzeugt ein neues {@link Authenticated}-Objekt.
	 *
	 * @return ein neues {@link Authenticated}-Objekt.
	 */
	public Authenticated createAuthenticated() {
		return new Authenticated();
	}

	/**
	 * Erzeugt ein neues {@link Self}-Objekt.
	 *
	 * @return ein neues {@link Self}-Objekt.
	 */
	public Self createSelf() {
		return new Self();
	}

	/**
	 * Erzeugt ein neues {@link Bind}-Objekt.
	 *
	 * @return ein neues {@link Bind}-Objekt.
	 */
	public Bind createBind() {
		return new Bind();
	}

	/**
	 * Erzeugt ein neues {@link Source}-Objekt.
	 *
	 * @return ein neues {@link Source}-Objekt.
	 */
	public Source createSource() {
		return new Source();
	}

	/**
	 * Erzeugt ein neues {@link Activelock}-Objekt.
	 *
	 * @return ein neues {@link Activelock}-Objekt.
	 */
	public Activelock createActivelock() {
		return new Activelock();
	}

	/**
	 * Erzeugt ein neues {@link Propname}-Objekt.
	 *
	 * @return ein neues {@link Propname}-Objekt.
	 */
	public Propname createPropname() {
		return new Propname();
	}

	/**
	 * Erzeugt ein neues {@link Resourcetype}-Objekt.
	 *
	 * @return ein neues {@link Resourcetype}-Objekt.
	 */
	public Resourcetype createResourcetype() {
		return new Resourcetype();
	}

	/**
	 * Erzeugt ein neues {@link Getcontentlength}-Objekt.
	 *
	 * @return ein neues {@link Getcontentlength}-Objekt.
	 */
	public Getcontentlength createGetcontentlength() {
		return new Getcontentlength();
	}

	/**
	 * Erzeugt ein neues {@link Creationdate}-Objekt.
	 *
	 * @return ein neues {@link Creationdate}-Objekt.
	 */
	public Creationdate createCreationdate() {
		return new Creationdate();
	}

	/**
	 * Erzeugt ein neues {@link SearchRequest}-Objekt.
	 *
	 * @return ein neues {@link SearchRequest}-Objekt.
	 */
	public SearchRequest createSearch() {
		return new SearchRequest();
	}

	/**
	 * Erzeugt ein {@link JAXBElement }{@code <}{@link String }{@code >}}-Objekt.
	 *
	 * @param value   der String, der dem {@link JAXBElement}-Objekt übergeben wird.
	 * @return ein {@link JAXBElement }{@code <}{@link String }{@code >}}-Objekt.
	 */
	@XmlElementDecl(namespace = "DAV:", name = "timeout")
	public JAXBElement<String> createTimeout(final String value) {
		return new JAXBElement<>(_Timeout_QNAME, String.class, null, value);
	}

	/**
	 * Erzeugt ein {@link JAXBElement }{@code <}{@link String }{@code >}}-Objekt.
	 *
	 * @param value   der String, der dem {@link JAXBElement}-Objekt übergeben wird.
	 * @return ein {@link JAXBElement }{@code <}{@link String }{@code >}}-Objekt.
	 */
	@XmlElementDecl(namespace = "DAV:", name = "sync-level")
	public JAXBElement<String> createSyncLevel(final String value) {
		return new JAXBElement<>(_SyncLevel_QNAME, String.class, null, value);
	}

	/**
	 * Erzeugt ein {@link JAXBElement }{@code <}{@link String }{@code >}}-Objekt.
	 *
	 * @param value   der String, der dem {@link JAXBElement}-Objekt übergeben wird.
	 * @return ein {@link JAXBElement }{@code <}{@link String }{@code >}}-Objekt.
	 */
	@XmlElementDecl(namespace = "DAV:", name = "status")
	public JAXBElement<String> createStatus(final String value) {
		return new JAXBElement<>(_Status_QNAME, String.class, null, value);
	}

	/**
	 * Erzeugt ein {@link JAXBElement }{@code <}{@link String }{@code >}}-Objekt.
	 *
	 * @param value   der String, der dem {@link JAXBElement}-Objekt übergeben wird.
	 * @return ein {@link JAXBElement }{@code <}{@link String }{@code >}}-Objekt.
	 */
	@XmlElementDecl(namespace = "DAV:", name = "responsedescription")
	public JAXBElement<String> createResponsedescription(final String value) {
		return new JAXBElement<>(_Responsedescription_QNAME, String.class, null, value);
	}

	/**
	 * Erzeugt ein {@link JAXBElement }{@code <}{@link String }{@code >}}-Objekt.
	 *
	 * @param value   der String, der dem {@link JAXBElement}-Objekt übergeben wird.
	 * @return ein {@link JAXBElement }{@code <}{@link String }{@code >}}-Objekt.
	 */
	@XmlElementDecl(namespace = "DAV:", name = "href")
	public JAXBElement<String> createHref(final String value) {
		return new JAXBElement<>(_Href_QNAME, String.class, null, value);
	}

	/**
	 * Erzeugt ein {@link JAXBElement }{@code <}{@link String }{@code >}}-Objekt.
	 *
	 * @param value   der String, der dem {@link JAXBElement}-Objekt übergeben wird.
	 * @return ein {@link JAXBElement }{@code <}{@link String }{@code >}}-Objekt.
	 */
	@XmlElementDecl(namespace = "DAV:", name = "sync-token")
	public JAXBElement<String> createSyncToken(final String value) {
		return new JAXBElement<>(_SyncToken_QNAME, String.class, null, value);
	}

	/**
	 * Erzeugt ein {@link JAXBElement }{@code <}{@link String }{@code >}}-Objekt.
	 *
	 * @param value   der String, der dem {@link JAXBElement}-Objekt übergeben wird.
	 * @return ein {@link JAXBElement }{@code <}{@link String }{@code >}}-Objekt.
	 */
	@XmlElementDecl(namespace = "DAV:", name = "dst")
	public JAXBElement<String> createDst(final String value) {
		return new JAXBElement<>(_Dst_QNAME, String.class, null, value);
	}

	/**
	 * Erzeugt ein {@link JAXBElement }{@code <}{@link BigInteger }{@code >}}-Objekt.
	 *
	 * @param value   das BigInteger-Objekt, der dem {@link JAXBElement}-Objekt übergeben wird.
	 * @return ein {@link JAXBElement }{@code <}{@link BigInteger }{@code >}}-Objekt.
	 */
	@XmlElementDecl(namespace = "DAV:", name = "nresults")
	public JAXBElement<BigInteger> createNresults(final BigInteger value) {
		return new JAXBElement<>(_Nresults_QNAME, BigInteger.class, null, value);
	}

	/**
	 * Erzeugt ein {@link JAXBElement }{@code <}{@link String }{@code >}}-Objekt.
	 *
	 * @param value   der String, der dem {@link JAXBElement}-Objekt übergeben wird.
	 * @return ein {@link JAXBElement }{@code <}{@link String }{@code >}}-Objekt.
	 */
	@XmlElementDecl(namespace = "DAV:", name = "src")
	public JAXBElement<String> createSrc(final String value) {
		return new JAXBElement<>(_Src_QNAME, String.class, null, value);
	}

	/**
	 * Erzeugt ein {@link JAXBElement }{@code <}{@link String }{@code >}}-Objekt.
	 *
	 * @param value   der String, der dem {@link JAXBElement}-Objekt übergeben wird.
	 * @return ein {@link JAXBElement }{@code <}{@link String }{@code >}}-Objekt.
	 */
	@XmlElementDecl(namespace = "DAV:", name = "depth")
	public JAXBElement<String> createDepth(final String value) {
		return new JAXBElement<>(_Depth_QNAME, String.class, null, value);
	}

}
