configurations {
	implementation.extendsFrom(jetty, resteasy, swagger, validation)
	javacore
	javaapi
}
 
dependencies {
	implementation project(':svws-core')
	implementation project(':svws-db-utils')
	implementation project(':svws-openapi')

    implementation 'org.codehaus.plexus:plexus-utils:3.4.1'
    
    javacore fileTree(dir: "$rootDir/svws-core/src/main/java", includes: ['**/svws/core/**/*.java'], excludes: ['**/svws/core/transpiler/TranspilerDTO.java'])
    
    javaapi fileTree(dir: "$rootDir/svws-openapi/src/main/java", includes: ['**/svws/api/*/*.java'], 
                     excludes: [ '**/svws/api/schema/**/*.java',
                                 '**/svws/api/client/**/*.java', 
                                 '**/svws/api/debug/**/*.java',
                                 '**/svws/api/webdav/**/*.java',
                                 '**/svws/api/server/APIAdressbuch.java',
                                 '**/svws/api/server/APIKalender.java']) 
}

task removeTranspiledCode(type: Delete) {
	group "svws"
	delete fileTree(dir: "$rootDir/svws-webclient/src/core/ts/src", includes: ["**/*.ts"]), fileTree(dir: "$rootDir/svws-transpiler/build/tmp/transpiler", includes: ["**/*.class"])
}

task prepareTranspile {
	doLast {
		file("build/transpiler-java-files.txt").text = configurations.javacore.files.toString().replace("[", "").replace("]", "").trim()
		file("build/transpiler-api-files.txt").text = configurations.javaapi.files.toString().replace("[", "").replace("]", "").trim()
	}
	group "svws"
	dependsOn compileJava
    inputs.files configurations.javacore.files, configurations.javaapi.files
    outputs.files "build/transpiler-java-files.txt", "build/transpiler-api-files.txt"
}

task transpile(type: JavaExec) {
	group = "svws"
	dependsOn prepareTranspile
    dependsOn project(":svws-core").tasks.assemble
    dependsOn project(":svws-openapi").tasks.assemble
    doFirst {
		delete fileTree(dir: "$rootDir/svws-webclient/src/core/ts/src", includes: ["**/*.ts"]), fileTree(dir: "$rootDir/svws-transpiler/build/tmp/transpiler", includes: ["**/*.class"])
	}
    inputs.files "build/transpiler-java-files.txt", "build/transpiler-api-files.txt", sourceSets.main.resources.getSourceDirectories()
    outputs.dir "$rootDir/svws-webclient/src/core/ts/src"
    description = "Transpiliert den Java-Code nach Type-/Javascript"
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "de.nrw.schule.svws.transpiler.app.CoreTranspiler"
    args "--output", "$rootDir/svws-webclient/src/core/ts/src",
         "--ignore", "de.nrw.schule.svws",
         "--javafiles", "build/transpiler-java-files.txt",
         "--apifiles", "build/transpiler-api-files.txt"
}

assemble.dependsOn transpile
