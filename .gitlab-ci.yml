# Source: https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Gradle.gitlab-ci.yml

# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Gradle.gitlab-ci.yml

# This is the Gradle build system for JVM applications
# https://gradle.org/
# https://github.com/gradle/gradle

image: svwsnrw/dockerrunner

# Disable the Gradle daemon for Continuous Integration servers as correctness
# is usually a priority over speed in CI environments. Using a fresh
# runtime for each build is more reliable since the runtime is completely
# isolated from any previous builds.
variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

cache: &global_cache
  key: "$CI_COMMIT_REF_NAME"
  policy: pull-push
  paths:
    - ./**/build
    - .gradle_user
    - .gradle

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle_user
  - ./gradlew --version
  - java --version

stages:
  - build
  - integration-tests
  - analyze
  - publish

publish:
    stage: publish
    rules:
          - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+(\.\d+)?$/'
            when: manual

    script: echo $CI_COMMIT_TAG & echo $CI_PIPELINE_SOURCE & echo $CI_COMMIT_REF_NAME & echo $CI_COMMIT_BRANCH
    when: on_success

integration-tests:
  dependencies:
  - build
  stage: integration-tests
  script: echo "test" #./gradlew --build-cache testing:integrationTest --stacktrace -Penvironment=testing -PMDB_PASSWORD=$MDB_PASSWORD -PMariaDB_ROOT_PASSWORD=$MariaDB_ROOT_PASSWORD -PMariaDB_PASSWORD=$MariaDB_PASSWORD -PSVWS_TLS_KEYSTORE_PASSWORD=$SVWS_TLS_KEYSTORE_PASSWORD -PMariaDB_USER=$MariaDB_USER
  cache:
    <<: *global_cache
    policy: pull
  artifacts:
    when: always
    expire_in: "7 days"
    reports:
      junit: ./testing/**/build/test-results/**/*.xml

build:
  stage: build
  script: echo "build" #./gradlew --build-cache build -Penvironment=build
  cache:
    <<: *global_cache
    policy: pull
  when: always
  artifacts:
    when: always
    reports:
      junit: ./**/build/test-results/test/**/TEST-*.xml
    paths:
      - "./build/**"
      - "./**/build/**"
    expire_in: "1 days"

sonarqube_analysis:
  stage: analyze
  only:
    refs:
      - dev
  when: manual
  script: ./gradlew sonarqube -Dsonar.projectKey=svws-server -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_LOGIN -Dsonar.password=$SONAR_PASSWORD --full-stacktrace
