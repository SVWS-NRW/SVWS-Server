# Source: https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Gradle.gitlab-ci.yml

# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Gradle.gitlab-ci.yml

# This is the Gradle build system for JVM applications
# https://gradle.org/
# https://github.com/gradle/gradle


image: 10.1.1.3/svwsnrw/docker-runner:21

# Disable the Gradle daemon for Continuous Integration servers as correctness
# is usually a priority over speed in CI environments. Using a fresh
# runtime for each build is more reliable since the runtime is completely
# isolated from any previous builds.
variables:
    GRADLE_OPTS: "-Dorg.gradle.daemon=false"

cache: &global_cache
    key: "$CI_COMMIT_REF_NAME"
    policy: pull-push
    paths:
        - ./**/build
        - .gradle_user
        - .gradle

stages:
    - build
    - integration-tests
    - analyze
    - build_snapshot_installer
    - build_installer
    - sign
    - publish

build:
    stage: build
    script:
        - chmod +x ./deployment/setupVersion.sh
        - ./deployment/setupVersion.sh
        - ./gradlew --build-cache build -Penvironment=build
    cache:
        <<: *global_cache
        policy: pull
    artifacts:
        when: always
        reports:
            junit: ./**/build/test-results/test/**/TEST-*.xml
        paths:
            - "./build/**"
            - "./**/build/**"
        expire_in: "1 days"
    when: always

integration-tests:
    dependencies:
        - build
    stage: integration-tests
    script:
        - chmod +x ./deployment/setupVersion.sh
        - ./deployment/setupVersion.sh
        - ./gradlew --build-cache tests:integrationTest --stacktrace
    cache:
        <<: *global_cache
        policy: pull
    artifacts:
        when: always
        expire_in: "7 days"
        reports:
            junit: ./tests/**/build/test-results/**/*.xml

sonarqube_analysis:
    stage: analyze
    only:
        refs:
            - dev
    script:
        - ./gradlew sonarqube -Dsonar.projectKey=svws-server -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_LOGIN -Dsonar.password=$SONAR_PASSWORD --full-stacktrace
    when: manual

build_snapshot_windows:
    stage: build_snapshot_installer
    needs:
        - job: build
    only:
        refs:
            - dev
    tags:
        - windows
    image: svwsnrw/dockerrunner-win
    script:
        - ./deployment/setupVersion.ps1
        - dir /builds/svws/SVWS-Server/
        - ./gradlew :deployment:windows-installer:doZip
        - mkdir artifacts_windows
        - copy .\deployment\windows-installer\build\output\win64-installer* .\artifacts_windows\
    artifacts:
        paths:
            - artifacts_windows/
    when: manual

build_linux:
    stage: build_installer
    rules:
       - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+(\.\d+)?$/'
    needs:
        - job: build
    script:
        - chmod +x ./deployment/setupVersion.sh
        - ./deployment/setupVersion.sh
        - ./gradlew :deployment:linux-installer:buildLinuxInstaller
        - mkdir artifacts_linux
        - cp -r ./deployment/linux-installer/build/distributions/ ./artifacts_linux
    artifacts:
        paths:
            - artifacts_linux/

build_windows:
    stage: build_installer
    rules:
        - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+(\.\d+)?$/'
    needs:
        - job: build
    tags:
        - windows
    image: svwsnrw/dockerrunner-win
    script:
        - ./deployment/setupVersion.ps1
        - dir /builds/svws/SVWS-Server/
        - ./gradlew :deployment:windows-installer:doZip
        - mkdir artifacts_windows
        - copy .\deployment\windows-installer\build\output\win64-installer* .\artifacts_windows\
    artifacts:
        paths:
            - artifacts_windows/

sign_artifacts:
    stage: sign
    image: 10.1.1.3/svwsnrw/docker-runner:17
    rules:
        - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+(\.\d+)?$/'
    needs:
        - job: build
        - job: build_windows
        - job: build_linux
    before_script:
        - chmod u+x config/signing/*.sh
    script:
        - ./gradlew signJars signWindowsInstaller
    artifacts:
        paths:
            - artifacts_windows/
            - artifacts_linux/
            - "./build/**"
            - "./**/build/**"
        exclude:
            - "./build/signing/**/*"
            - "./build/signing"

publish_all:
    stage: publish
    rules:
        - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+(\.\d+)?$/'
    variables:
        SECURE_FILES_DOWNLOAD_PATH: '/'
    needs:
        - job: sign_artifacts
    script:
        - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash
        - cat gradle_secure.properties >> gradle.properties
        - chmod +x ./deployment/setupVersion.sh
        - ./deployment/setupVersion.sh
        - ./gradlew publishReleaseAll
    when: manual

publish_maven:
    stage: publish
    rules:
        - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+(\.\d+)?$/'
    variables:
        SECURE_FILES_DOWNLOAD_PATH: '/'
    needs:
        - job: sign_artifacts
    script:
        - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash
        - cat gradle_secure.properties >> gradle.properties
        - chmod +x ./deployment/setupVersion.sh
        - ./deployment/setupVersion.sh
        - ./gradlew publishAllPublicationsToSonatypeRepository closeAndReleaseSonatypeStagingRepository
    when: manual

publish_dockerhub:
    stage: publish
    rules:
        - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+(\.\d+)?$/'
    variables:
        SECURE_FILES_DOWNLOAD_PATH: '/'
    needs:
        - job: sign_artifacts
    script:
        - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash
        - cat gradle_secure.properties >> gradle.properties
        - cat dockerlogin.txt | docker login --username svwsnrw --password-stdin
        - chmod +x ./deployment/setupVersion.sh
        - ./deployment/setupVersion.sh
        - ./gradlew :deployment:docker:dockerPushAllDockerhub
    when: manual

publish_github:
    stage: publish
    rules:
        - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+(\.\d+)?$/'
    variables:
        SECURE_FILES_DOWNLOAD_PATH: '/'
    needs:
        - job: sign_artifacts
    script:
        - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | bash
        - cat gradle_secure.properties >> gradle.properties
        - chmod +x ./deployment/setupVersion.sh
        - ./deployment/setupVersion.sh
        - ./gradlew :deployment:githubRelease
    when: manual
