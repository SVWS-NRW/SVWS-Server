plugins {
	id 'svws.gradle.node.plugin'
}

sourcesJar.dependsOn project(':svws-openapi').tasks.assembleTranspiled

task assembleCore(type: NpmRun) {
	dependsOn rootProject.npmPrepare, project(':svws-openapi').tasks.assemble
	group "build"
	args = ['build']
	inputs.files fileTree("$projectDir").matching { exclude "build", "dist" }
	outputs.dir file("$projectDir/dist")
}

assemble.dependsOn assembleCore

task cleanCore(type: Delete) {
	delete file("$projectDir/dist")
}

clean.dependsOn cleanCore

task testCore(type: NpmRun) {
	group "svws"
	dependsOn ':svws-webclient:core:assemble'	
	inputs.files file("$projectDir/src")
	outputs.dir file("$projectDir/build/coverage")
	args = [ 'test:run' ]
	doFirst {
		mkdir file("$projectDir/build/coverage")
	}
}

task publishNexusCore(type: NpmPublish) {
	dependsOn build
	group "publishing"
	npmrc = "$rootDir/.npmrc.nexus"
	repository = "https://artifactory.svws-nrw.de/repository/npm-private/"
	actor = project.ext.getNexusActor()
	token = project.ext.getNexusToken()
	scopePublic = false
}

task publishNpmCore(type: NpmPublish) {
	dependsOn build
	group "publishing"
	npmrc = "$rootDir/.npmrc.npm"
	repository = "https://registry.npmjs.org/"
	token = project.ext.getNpmToken()
	scopePublic = true
	tokenOnly = true
}

publishReleaseAll.dependsOn publishNexusCore
publishReleaseAll.dependsOn publishNpmCore
