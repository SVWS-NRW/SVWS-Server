# Dies ist ein Template File. In den verschiedenen Subpackage wird jeweils ein Dockerfile hieraus abgeleitet.
# Die Datei wird durch das Gradle-Script "buildDockerfile" in das Dockerfile des jeweiligen Subpackages kopiert. Während des Kopiervorgangs
# werden die Platzhalter durch die entsprechenden Werte ersetzt.

# Verwende das offizielle OpenJDK 11 Image und installiere zusätzlich die benötigten Pakete
FROM eclipse-temurin:21
RUN apt update && apt-get -y install gettext zip mariadb-client

# Erstelle die Verzeichnisse
RUN mkdir -p /opt/app/svws/client

# Kopiere die Konfigurationsdateien
COPY build/tempdocker/appConf/svws_config.json.template.GRADLE_PLACEHOLDER_MARIADB_CONTAINER_NAME /etc/app/svws/conf/svws_config.json.template.GRADLE_PLACEHOLDER_MARIADB_CONTAINER_NAME

# Kopiere die Startskripte
COPY build/tempdocker/init-scripts/startup.sh /opt/app/svws/startup.sh
COPY build/tempdocker/init-scripts /etc/app/svws/init-scripts

# Kopiere SSL Zertifakte für die JDK und füge der JDK im Container das Zertifikat hinzu
RUN mkdir /var/ssl &&\
	openssl req -subj '/CN=GRADLE_PLACEHOLDER_ENM_HOST' -new -newkey rsa:2048 -days 3650 -nodes -x509 -keyout /var/ssl/private.key -out /var/ssl/public.pem &&\
	keytool -importcert -noprompt -keystore /opt/java/openjdk/lib/security/cacerts -alias localhost -file /var/ssl/public.pem

# Kopiere die Datenbanken
COPY build/tempdatabases /etc/app/svws/testdatabases

# Kopiere die extLibs (Java Bibliotheken) und die Build Artefakte
COPY ../build/extLib /build/SVWS-Client.zip /build/SVWS-Admin-Client.zip  /opt/app/svws/

RUN unzip -d /opt/app/svws/client /opt/app/svws/SVWS-Client.zip &&\
	unzip -d /opt/app/svws/admin /opt/app/svws/SVWS-Admin-Client.zip &&\
 	rm -rf /opt/app/svws/SVWS-Client*.zip &&\
	rm -rf /opt/app/svws/SVWS-Admin-Client*.zip

WORKDIR /opt/app/svws

# Starte die Anwendung mit dem startup Script. Diese wurde auch von Gradle kopiert / generiert und enthält die richtigen Platzhalter
ENTRYPOINT ["/bin/bash", "startup.sh"]
