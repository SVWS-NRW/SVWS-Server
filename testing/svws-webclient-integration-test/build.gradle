import org.apache.tools.ant.filters.ReplaceTokens

dependencies {
	implementation project(':svws-webclient')
}

apply from: ('../subproject-plugin.gradle')

def testResultSrc = '../../svws-webclient/build/coverage/api-test'
def testResultTarget = 'build/test-results/svws-webclient-integration-test'

// lokale variablen, um copyConfigApiTest zu erg√§nzen
def targetHost = project.TESTING_SVWS_HOST
def targetPort = project.TESTING_SVWS_PORT
def targetSchema = 'gymabi'

def propertyFile = "../testing/svws-webclient-integration-test/local.properties"

task apiTest(type: Test) {
	if(new File(propertyFile).exists()) {
		inputs.file(propertyFile)
	}
	group 'verification'
	description 'Webclient Api Tests aufrufen'
	dependsOn(tasks.getByPath(':svws-webclient:testApi'))
	tasks.getByPath(':svws-webclient:testApi').configure {
		dependsOn(':testing:svws-webclient-integration-test:startTestumgebung')
		ignoreExitValue = true
		outputs.upToDateWhen {false}
		
		environment NODE_TLS_REJECT_UNAUTHORIZED: 0
		environment VITE_svws_testing_api_schema: targetSchema
		environment VITE_svws_testing_api_host: targetHost
		environment VITE_svws_testing_api_port: targetPort
	}
	reports.junitXml.outputLocation.set(file(testResultSrc))
	finalizedBy.add('copyTestResults')
}

task copyTestResults(type: Copy) {
	from testResultSrc  + '/junit.xml'
	into testResultTarget
}

task cleanCopyTestResults() {
	delete testResultTarget
}
